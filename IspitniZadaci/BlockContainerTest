package IspitniZadaci;
import java.util.*;
import java.util.stream.Collectors;

class BlockContainer<T extends Comparable<T>>
{
    List<Set<T>> blockContainer;
    int n;

    public BlockContainer(int n) {
        this.n = n;
        this.blockContainer = new ArrayList<>();
    }

    public void add(T a) {
        if (blockContainer.isEmpty())
        {
            TreeSet<T> treeSet = new TreeSet<>();
            treeSet.add(a);
            blockContainer.add(treeSet);
        }
        else if (blockContainer.get(blockContainer.size()-1).size()<n)
        {
            blockContainer.get(blockContainer.size()-1).add(a);
        }
        else {
            TreeSet<T> newSet = new TreeSet<>();
            newSet.add(a);
            blockContainer.add(newSet);
        }
    }

    public boolean remove(T a) {
        boolean flag = blockContainer.get(blockContainer.size()-1).remove(a);
        if (blockContainer.get(blockContainer.size()-1).isEmpty())
        {
            blockContainer.remove(blockContainer.size()-1);
        }
        return flag;
    }

    public void sort() {
        List<T> all = blockContainer.stream()
                .flatMap(Collection::stream)
                .collect(Collectors.toList());
        all.sort(Comparable::compareTo);
        blockContainer.clear();

        for (T element: all)
        {
            this.add(element);
        }
    }

    @Override
    public String toString() {
        return blockContainer.stream().map(block-> "[" +
                block.stream().map(Objects::toString).collect(Collectors.joining(", "))
        + "]").collect(Collectors.joining(","));
    }
}

public class BlockContainerTest {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int size = scanner.nextInt();
        BlockContainer<Integer> integerBC = new BlockContainer<Integer>(size);
        scanner.nextLine();
        Integer lastInteger = null;
        for(int i = 0; i < n; ++i) {
            int element = scanner.nextInt();
            lastInteger = element;
            integerBC.add(element);
        }
        System.out.println("+++++ Integer Block Container +++++");
        System.out.println(integerBC);
        System.out.println("+++++ Removing element +++++");
        integerBC.remove(lastInteger);
        System.out.println("+++++ Sorting container +++++");
        integerBC.sort();
        System.out.println(integerBC);
        BlockContainer<String> stringBC = new BlockContainer<String>(size);
        String lastString = null;
        for(int i = 0; i < n; ++i) {
            String element = scanner.next();
            lastString = element;
            stringBC.add(element);
        }
        System.out.println("+++++ String Block Container +++++");
        System.out.println(stringBC);
        System.out.println("+++++ Removing element +++++");
        stringBC.remove(lastString);
        System.out.println("+++++ Sorting container +++++");
        stringBC.sort();
        System.out.println(stringBC);
    }
}





